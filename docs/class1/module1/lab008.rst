Lab - Implement Dynamic Certificate Injection
------------------------------------------------

In this section we will use HTTP Connector to retrieve a user's certificate from Active Directory to be used in the BIG-IP Certificate minting process


Task - Create a HTTP Connector Transport
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


1. Navigate to Access >> Authentication >> HTTP Connector >> HTTP Connector Transport  Click the  **+ plus Symbol**

|image54|

2. Enter Name **demo-http-connector**
3. Select **prebuilt-dns-resolver** from the DNS Resolver dropdown
4. Select **prebuilt-adpiadmin-serverssl** from the Server SSL Profile
5. Click **Save**

|image55|

Task - Create a HTTP Connector Request
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

6. Navigate to Access >> Authentication >> HTTP Connector >> HTTP Connector Request.  Click the  **+ plus symbol**

|image56|

7. Enter name **get-cert**
8. Select **demo-http-connector** from the dropdown 
9. Enter URL **https://adapi.f5lab.local:8443/aduser/cert?useridentity=%{perflow.username}**
10. Enter **GET** for the Method
11. Select **Parse** for the Response Action
12. Click **Save** 

|image57|


Task - Create a Per-Request Policy
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


13. Navigate to Access >> Profiles/Policies >> Per-Request Policies  Click the  **+ Plus Symbol**

|image58|

14. Enter the name **certsso_prp**
15. Select the Language **English**
16. Click **Finished**

|image59|

17. Click **edit** under Per-Request Policy

|image60|

18. Click **Add New Subroutine**

|image61|

19. Enter the name **Request Cert**
20. Click **Save**

|image62|

21. Expand the subroutine by click the **+ plus symbol**

|image63|

22. Click the **+ plus symbol** on the fallback branch.

|image64|

23. Click the **General Purpose** tab
24. Select **HTTP Connector**
25. Click **Add Item**

|image65|

26. Select **get-cert** drop the dropdown

|image66|

27. Click **Edit Terminals**

|image67|

28. Click **Add Terminal**

|image68|

29. Change the name for the default branch to **Fail**
30. Change the default branch text to **Red**
31. Enter the name **Success** for the new branch
32. Change the color of the new branch to **Success**

|image69|

33. Click the **Fail** terminal at the end of the Successful branch

|image70|

34. Select the **Success** Terminal
35. Click **Save**

|image71|

36. Click the **+ plus symbol** on the successful branch

|image72|

37. Click the **Assignment** tab
38. Select **Variable Assign**
39. Click **Add Item**

|image73|

40. Click **Add new entry**
41. Click **change**

|image74|

42. Enter **session.ssl.cert.whole** for the Custom Variable
43. Select **Session Variable** from the dropdown
44. Enter **subsession.http_connector.body.certificate** for the Session Variable
45. Click **Finished**

|image75|

46. Click **Save**

|image76|

47. Click the **+ plus symbol** located between Start and Allow in the policy

|image77|

48. Click the **Subroutines** tab
49. Select the **Request Cert** subroutine
50. Click **Add Item**

|image78|

51. Click the **+ plus symbol** on the success branch of Request Cert

|image79|

52. Click the **General Purpose** tab
53. Select **irule Event**
54. Click **Add Item**


.. note ::  
	This irule event triggers the code from the previously attached irule. This 	    	irule must be used when inserting a certificate using C3D in a per-request        	policy.

	| when ACCESS_PER_REQUEST_AGENT_EVENT {
 	| set cert [ACCESS::session data get {session.ssl.cert.whole}]
 	| log local0. "My cert: $cert"
 	| SSL::c3d cert [X509::pem2der $cert]
	| } 


|image80|

55. Enter **lab** for the ID
56. Click **Save**

|image81|

Task - Attach the PRP to the mTLS virtual Server
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

57. Navigate to Local Traffic >> Virtual Servers.  Click **Virtual Server List**

|image82|

58. Click **mtls_vs**

|image83|

59. Navigate to the Access Policy Section and select **certsso_prp** from the Per-Request Policy dropdown
60. Click **Update**


|image84|




.. |image54| image:: /_static/class1/module1/image054.png
.. |image55| image:: /_static/class1/module1/image055.png
.. |image56| image:: /_static/class1/module1/image056.png
.. |image57| image:: /_static/class1/module1/image057.png
.. |image58| image:: /_static/class1/module1/image058.png
.. |image59| image:: /_static/class1/module1/image059.png
.. |image60| image:: /_static/class1/module1/image060.png
.. |image61| image:: /_static/class1/module1/image061.png
.. |image62| image:: /_static/class1/module1/image062.png
.. |image63| image:: /_static/class1/module1/image063.png
.. |image64| image:: /_static/class1/module1/image064.png
.. |image65| image:: /_static/class1/module1/image065.png
.. |image66| image:: /_static/class1/module1/image066.png
.. |image67| image:: /_static/class1/module1/image067.png
.. |image68| image:: /_static/class1/module1/image068.png
.. |image69| image:: /_static/class1/module1/image069.png
.. |image70| image:: /_static/class1/module1/image070.png
.. |image71| image:: /_static/class1/module1/image071.png
.. |image72| image:: /_static/class1/module1/image072.png
.. |image73| image:: /_static/class1/module1/image073.png
.. |image74| image:: /_static/class1/module1/image074.png
.. |image75| image:: /_static/class1/module1/image075.png
.. |image76| image:: /_static/class1/module1/image076.png
.. |image77| image:: /_static/class1/module1/image077.png
.. |image78| image:: /_static/class1/module1/image078.png
.. |image79| image:: /_static/class1/module1/image079.png
.. |image80| image:: /_static/class1/module1/image080.png
.. |image81| image:: /_static/class1/module1/image081.png
.. |image82| image:: /_static/class1/module1/image082.png
.. |image83| image:: /_static/class1/module1/image083.png
.. |image84| image:: /_static/class1/module1/image084.png




